@page
@using Microsoft.AspNetCore.Mvc.Localization
@model IdentityServerHost.Pages.Login.Index
@inject IViewLocalizer Localizer
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="~/css/LoginPage.css" asp-append-version="true" />
</head>
<body>
    <div class="containerLoginPage">
        <div class="LoginHeader"><h2>@Localizer["Welcome to Trylt"]</h2>  <h2>@Localizer["Choose how to login"]</h2></div>
        <partial name="_ValidationSummary" />

        <div class="LoginContainer">
            <form asp-action="Login">
                <input asp-for="Input.ReturnUrl" type="hidden" />

                <div class="form-group">
                    <input asp-for="Input.Username" class="form-control" placeholder="@Localizer["Email address or Phone number or Username"]" autofocus>
                </div>

                <div class="form-group">
                    <input asp-for="Input.Password" type="password" class="form-control" placeholder="@Localizer["Password"]" autocomplete="off">
                </div>

                @if (Model.View.AllowRememberLogin)
                {
                    <div class="form-check">
                        <div>
                            <input asp-for="Input.RememberLogin" class="form-check-input" id="Input.RememberLogin">

                            <label class="form-check-label" for="Input.RememberLogin">@Localizer["Remember me"]</label>
                        </div>
                        <div>
                            <a asp-page="/Account/ForgotPassword" class="forgot-password-link">@Localizer["Forgot password?"]</a>

                        </div>
                       

                    </div>
                }
                <button class="LoginButton" name="Input.Button" value="login">@Localizer["Login"]</button>
                <button class="LoginButton" name="Input.Button" value="cancel">@Localizer["Cancel"]</button>

            </form>
            @if (Model.View.VisibleExternalProviders.Any())
            {
                <div class="external-login">
                    <p>@Localizer["or"]</p>
                    @foreach (var provider in Model.View.VisibleExternalProviders)
                    {
                        <a class="btn btn-google"
                           asp-page="/ExternalLogin/Challenge"
                           asp-route-scheme="@provider.AuthenticationScheme"
                           asp-route-returnUrl="@Model.Input.ReturnUrl">
                            @Localizer["Login via"] @Localizer[provider.DisplayName]
                        </a>
                    }
                </div>
            }
        </div>
        

        <div class="register">
            
            <p>@Localizer["Don't have an account yet?"] <a asp-page="/Register/Index" asp-route-returnUrl="@Model.Input.ReturnUrl">@Localizer["Register here"]</a></p>
        </div>
    </div>
    @if (!Model.View.EnableLocalLogin && !Model.View.VisibleExternalProviders.Any())
    {
        <div class="alert alert-warning">
            <strong>Invalid login request</strong>
            There are no login schemes configured for this request.
        </div>
    }
</body>
</html>

